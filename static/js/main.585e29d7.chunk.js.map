{"version":3,"sources":["index.js"],"names":["arr1","row1","msj2","push","tabla1","class","document","getElementById","onclick","ReactDOM","render","nodes","edges","i","id","label","String","from","to","data","graph","options","smooth","type","forceDirection","roundness","color","layout","hierarchical","direction","physics","events","select","event","getNetwork","this","getEdges","getNodes","vis"],"mappings":"qKAAA,mEAQIA,EAAO,CAAC,QAAS,OAAQ,SAEzBC,EACF,4BACE,4BAAKD,EAAK,IACV,4BAAKA,EAAK,IACV,4BAAKA,EAAK,KAcVE,EAAO,CAACD,GACZC,EAAKC,KAAKF,GACVC,EAAKC,KAAKF,GACVC,EAAKC,KAAKF,GACVC,EAAKC,KAAKF,GACV,IAAIG,EACF,6BACE,2BAAOC,MAAM,OACX,4BACE,mCACA,yCACA,uCAEF,4BACE,uCACA,kDACA,qDAEF,4BACE,uCACA,uCACA,wCAEDH,IAKPI,SAASC,eAAe,QAAQC,QAAU,WACxCC,IAASC,OACPN,EACAE,SAASC,eAAe,WAY5BD,SAASC,eAAe,QAAQC,QAAU,WAIxC,IAJyD,IAAD,OACpDG,EAAQ,GACRC,EAAQ,GAEHC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,EAAMR,KAAK,CAAEW,GAAID,EAAGE,MAAOC,OAAOH,KAEpCD,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,KAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,KAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,KAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,IAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,KAC1BN,EAAMT,KAAK,CAAEc,KAAM,EAAGC,GAAI,KAC1BP,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,IAAN,MAAqB,EACrBA,EAAM,IAAN,MAAqB,EACrBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,IAAN,MAAqB,EACrBA,EAAM,IAAN,MAAqB,EACrBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,GAAN,MAAoB,EACpBA,EAAM,IAAN,MAAqB,EAErB,IAAIQ,EAAO,CACTR,MAAOA,EACPC,MAAOA,GA0BTH,IAASC,OACP,kBAAC,IAAD,CACEU,MAAOD,EACPE,QA1BU,CACZT,MAAO,CACLU,OAAQ,CACNC,KAAM,cACNC,eAAgB,WAChBC,UAAW,IAEbC,MAAO,SAETC,OAAQ,CACNC,aAAc,CACZC,UAAW,OAGfC,SAAS,GAaPC,OAVS,CACXC,OAAQ,SAAUC,GACOA,EAAjBtB,MAAiBsB,EAAVrB,QASbsB,WAAYC,KAAKD,WACjBE,SAAUD,KAAKC,SACfC,SAAUF,KAAKE,SACfC,IAAK,SAAAA,GAAG,OAAK,EAAKA,IAAMA,KAE1BhC,SAASC,eAAe,iB","file":"static/js/main.585e29d7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Graph from 'vis-react';\n//import {retornaT1} from './ret';\n//import {retornaT2} from './ret';\n//import {retornaT2} from './asin/ret';\n\nlet arr1 = [\"mundo\", \"como\", \"estas\"];\n\nlet row1 = (\n  <tr>\n    <td>{arr1[0]}</td>\n    <td>{arr1[1]}</td>\n    <td>{arr1[2]}</td>\n  </tr>\n);\n\n/*\nfor(let i=1;i<3;i++){\n  row1.push(\n    <tr>\n      <td>{arr1[0]}</td>\n      <td>{arr1[1]}</td>\n      <td>{arr1[2]}</td>\n    </tr>\n  );\n}*/\nlet msj2 = [row1];\nmsj2.push(row1);\nmsj2.push(row1);\nmsj2.push(row1);\nmsj2.push(row1);\nlet tabla1 = (\n  <div>\n    <table class=\"egt\">\n      <tr>\n        <th>Hoy</th>\n        <th>Mañana</th>\n        <th>Martes</th>\n      </tr>\n      <tr>\n        <td>Soleado</td>\n        <td>Mayormente soleado</td>\n        <td>Parcialmente nublado</td>\n      </tr>\n      <tr>\n        <td>19°C</td>\n        <td>17°C</td>\n        <td>12°C</td>\n      </tr>\n      {msj2}\n    </table>\n  </div>\n);\n\ndocument.getElementById('btn1').onclick = function a() {\n  ReactDOM.render(\n    tabla1,\n    document.getElementById('root1')\n  );\n}\n\n/*\ndocument.getElementById('btn2').onclick = function b() {\n  ReactDOM.render(\n    <h1>Hola Universo</h1>,\n    document.getElementById('root1')\n  );\n}\n*/\ndocument.getElementById('btn2').onclick = function tree() {\n  var nodes = [];\n  var edges = [];\n  // randomly create some nodes and edges\n  for (var i = 0; i < 15; i++) {\n    nodes.push({ id: i, label: String(i) });\n  }\n  edges.push({ from: 0, to: 1 });\n  edges.push({ from: 0, to: 6 });\n  edges.push({ from: 0, to: 13 });\n  edges.push({ from: 0, to: 11 });\n  edges.push({ from: 1, to: 2 });\n  edges.push({ from: 2, to: 3 });\n  edges.push({ from: 2, to: 4 });\n  edges.push({ from: 3, to: 5 });\n  edges.push({ from: 1, to: 10 });\n  edges.push({ from: 1, to: 7 });\n  edges.push({ from: 2, to: 8 });\n  edges.push({ from: 2, to: 9 });\n  edges.push({ from: 3, to: 14 });\n  edges.push({ from: 1, to: 12 });\n  nodes[0][\"level\"] = 0;\n  nodes[1][\"level\"] = 1;\n  nodes[6][\"level\"] = 1;\n  nodes[11][\"level\"] = 1;\n  nodes[13][\"level\"] = 1;\n  nodes[7][\"level\"] = 2;\n  nodes[10][\"level\"] = 2;\n  nodes[12][\"level\"] = 2;\n  nodes[2][\"level\"] = 3;\n  nodes[3][\"level\"] = 4;\n  nodes[4][\"level\"] = 4;\n  nodes[8][\"level\"] = 4;\n  nodes[9][\"level\"] = 4;\n  nodes[5][\"level\"] = 5;\n  nodes[14][\"level\"] = 5;\n  // you can extend the options like a normal JSON variable:\n  var data = {\n    nodes: nodes,\n    edges: edges\n  };\n\n  var options = {\n    edges: {\n      smooth: {\n        type: 'cubicBezier',\n        forceDirection: 'vertical',\n        roundness: 0.4\n      },\n      color: 'black'\n    },\n    layout: {\n      hierarchical: {\n        direction: 'UD'\n      }\n    },\n    physics: false\n  };\n\n  var events = {\n    select: function (event) {\n      var { nodes, edges } = event;\n    }\n  };\n  \n  ReactDOM.render(\n    <Graph\n      graph={data}\n      options={options}\n      events={events}\n      getNetwork={this.getNetwork}\n      getEdges={this.getEdges}\n      getNodes={this.getNodes}\n      vis={vis => (this.vis = vis)}\n    />,\n    document.getElementById('mynetwork')\n  );\n}"],"sourceRoot":""}